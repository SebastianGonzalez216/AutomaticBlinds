/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import gnu.io.CommPortIdentifier;
import gnu.io.SerialPort;
import java.awt.event.KeyEvent;

import java.io.OutputStream;
import java.util.Enumeration;
import javax.swing.ImageIcon;

import javax.swing.JOptionPane;
/**
 *
 * @author Ragnar
 */
public class PANEL_FRAME extends javax.swing.JFrame {

    /**
     * Creates new form PANEL_FRAME
     */
    
    private static final String Inicial="0";
    private static final String Cuarto_derecha="90";
    private static final String Cuarto_izquierda="-90";
    private static final String Media_derecha="180";
    private static final String Media_izquierda="-180";
    private static final String Completa_derecha="360";
    private static final String Completa_izquierda="-360";
    
    
   
    private OutputStream output=null;
    SerialPort serialPort;

    private final String PUERTO="COM3";
    private static final int TIMEOUT=2000; //Milisegundos
    private static final int DATA_RATE=9600;
    
    
    public PANEL_FRAME() {
        initComponents();
        
        setIconImage(new ImageIcon(getClass().getResource("/Imagenes/ICONO_MOTOR.png")).getImage());
        
        setLocationRelativeTo(null);        
        setSize(350, 400);
        setResizable(false);
        setVisible(true);

        inicializarConexion();
    }
    
    //-------------------------------------------------------------------------------------------------
    
    public void inicializarConexion()
        {
        CommPortIdentifier port;
            
        CommPortIdentifier puertoID=null;
        Enumeration puertoEnum=CommPortIdentifier.getPortIdentifiers();
        
               while(puertoEnum.hasMoreElements())
               {
               CommPortIdentifier actualPuertoID=(CommPortIdentifier) puertoEnum.nextElement();
                    if(PUERTO.equals(actualPuertoID.getName()))
                    {
                    puertoID=actualPuertoID;
                    break;
                    }
               }
        
        if(puertoID==null)
        {
        mostrarError("No se puede conectar al puerto");
        System.exit(ERROR);
        }
        
        
            try
            {
            serialPort = (SerialPort) puertoID.open(this.getClass().getName(), TIMEOUT);
            //Par√°metros puerto serie
            
            serialPort.setSerialPortParams(DATA_RATE, SerialPort.DATABITS_8, SerialPort.STOPBITS_1, SerialPort.PARITY_NONE);
            output = serialPort.getOutputStream();
            } 
                  catch(Exception e)
                  {
                  mostrarError(e.getMessage());
                  System.exit(ERROR);
                  }
        }
    
    //-------------------------------------------------------------------------------------------------
        private void enviarDatos(String datos)
        {
          try
          {
          output.write(datos.getBytes());
          } 
             catch(Exception e)
             {
             mostrarError("ERROR");
             System.exit(ERROR);
             }
          }  
            
            //----------------------------------------------------------------------------------------
            
        public void mostrarError(String mensaje)
        {
        JOptionPane.showMessageDialog(this, mensaje, "Error", JOptionPane.ERROR_MESSAGE);
        }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ComboPasos = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ComboMovimiento = new javax.swing.JComboBox<>();
        BtnGirar = new javax.swing.JButton();
        txtGrados = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        BtnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Panel de control del motor");
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(0, 0, 300, 320));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(getIconImage());
        setMaximumSize(new java.awt.Dimension(300, 320));
        setMinimumSize(new java.awt.Dimension(300, 320));

        ComboPasos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A paso simple", "A paso doble", "A medio paso" }));

        jLabel1.setText("Selecciona el tipo de movimiento:");

        jLabel2.setText("Selecciona el movimiento que deseas hacer:");

        ComboMovimiento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Volver al punto inicial", "Cuarto de vuelta a la derecha", "Cuarto de vuelta a la izquierda", "Media vuelta a la derecha", "Media vuelta a la izquierda", "Vuelta completa a la derecha", "Vuelta completa a la izquierda" }));
        ComboMovimiento.setToolTipText("");

        BtnGirar.setText("Girar motor");
        BtnGirar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BtnGirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGirarActionPerformed(evt);
            }
        });

        txtGrados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGradosActionPerformed(evt);
            }
        });
        txtGrados.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtGradosKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtGradosKeyTyped(evt);
            }
        });

        jLabel3.setText("Giro personalizado (grados):");

        BtnSalir.setText("Salir");
        BtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BtnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnGirar, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(ComboMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ComboPasos, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtGrados, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ComboPasos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(ComboMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(15, 15, 15)
                .addComponent(txtGrados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(BtnGirar)
                .addGap(18, 18, 18)
                .addComponent(BtnSalir)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnGirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGirarActionPerformed
   
    MandarDatos();
    
    }//GEN-LAST:event_BtnGirarActionPerformed

    private void BtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSalirActionPerformed
        // TODO add your handling code here:
    System.exit(0); 
    }//GEN-LAST:event_BtnSalirActionPerformed

    private void txtGradosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGradosKeyTyped
        // TODO add your handling code here:
    char car = evt.getKeyChar();
    if((car<'0' || car>'9'))
    if((car!='-')&&(car!='+'))evt.consume();
    }//GEN-LAST:event_txtGradosKeyTyped

    private void txtGradosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGradosKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
         MandarDatos();  
        }
    }//GEN-LAST:event_txtGradosKeyReleased

    private void txtGradosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGradosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGradosActionPerformed

    /**
     * @param args the command line arguments
     */
    //----------------------------------------------------------------------------------------------------------------
    
    private void MandarDatos()
    {
        String Opcion = ComboMovimiento.getSelectedItem().toString();    
    String Opcion2 = ComboPasos.getSelectedItem().toString();   
    
    

    if(txtGrados.getText().length()==0)
    {
        
        if (Opcion.equals("Volver al punto inicial") && Opcion2.equals("A paso simple"))
        {
        enviarDatos("1," + Inicial);
        }
        else if (Opcion.equals("Volver al punto inicial") && Opcion2.equals("A paso doble"))
        {
        enviarDatos("2," + Inicial);    
        }
        else if (Opcion.equals("Volver al punto inicial") && Opcion2.equals("A medio paso"))
        {
        enviarDatos("3," + Inicial);    
        }        
        else if (Opcion.equals("Cuarto de vuelta a la derecha") && Opcion2.equals("A paso simple"))
        {
        enviarDatos("1," + Cuarto_derecha);     
        }
        else if (Opcion.equals("Cuarto de vuelta a la derecha") && Opcion2.equals("A paso doble"))
        {
        enviarDatos("2," + Cuarto_derecha);     
        }
        else if (Opcion.equals("Cuarto de vuelta a la derecha") && Opcion2.equals("A medio paso"))
        {
        enviarDatos("3," + Cuarto_derecha);     
        }
        else if (Opcion.equals("Cuarto de vuelta a la izquierda") && Opcion2.equals("A paso simple"))
        {
        enviarDatos("1," + Cuarto_izquierda);     
        }
        else if (Opcion.equals("Cuarto de vuelta a la izquierda") && Opcion2.equals("A paso doble"))
        {
        enviarDatos("2," + Cuarto_izquierda);     
        }
        else if (Opcion.equals("Cuarto de vuelta a la izquierda") && Opcion2.equals("A medio paso"))
        {
        enviarDatos("3," + Cuarto_izquierda);     
        }
        else if (Opcion.equals("Media vuelta a la derecha") && Opcion2.equals("A paso simple"))
        {
        enviarDatos("1," + Media_derecha);     
        }
        else if (Opcion.equals("Media vuelta a la derecha") && Opcion2.equals("A paso doble"))
        {
        enviarDatos("2," + Media_derecha);     
        }
        else if (Opcion.equals("Media vuelta a la derecha") && Opcion2.equals("A medio paso"))
        {
        enviarDatos("3," + Media_derecha);     
        }
        else if (Opcion.equals("Media vuelta a la izquierda") && Opcion2.equals("A paso simple"))
        {
        enviarDatos("1," + Media_izquierda);     
        }
        else if (Opcion.equals("Media vuelta a la izquierda") && Opcion2.equals("A paso doble"))
        {
        enviarDatos("2," + Media_izquierda);     
        }
        else if (Opcion.equals("Media vuelta a la izquierda") && Opcion2.equals("A medio paso"))
        {
        enviarDatos("3," + Media_izquierda);     
        }
        else if (Opcion.equals("Vuelta completa a la derecha") && Opcion2.equals("A paso simple"))
        {
        enviarDatos("1," + Completa_derecha);     
        }
        else if (Opcion.equals("Vuelta completa a la derecha") && Opcion2.equals("A paso doble"))
        {
        enviarDatos("2," + Completa_derecha);     
        }
        else if (Opcion.equals("Vuelta completa a la derecha") && Opcion2.equals("A medio paso"))
        {
        enviarDatos("3," + Completa_derecha);     
        }
        else if (Opcion.equals("Vuelta completa a la izquierda") && Opcion2.equals("A paso simple"))
        {
        enviarDatos("1," + Completa_izquierda);     
        }
        else if (Opcion.equals("Vuelta completa a la izquierda") && Opcion2.equals("A paso doble"))
        {
        enviarDatos("2," + Completa_izquierda);     
        }
        else if (Opcion.equals("Vuelta completa a la izquierda") && Opcion2.equals("A medio paso"))
        {
        enviarDatos("3," + Completa_izquierda);     
        }
    }
    else
    { 
            if (Opcion2.equals("A paso simple"))
            {
            enviarDatos("1," + txtGrados.getText());
            }
            else if (Opcion2.equals("A paso doble"))
            {
            enviarDatos("2," + txtGrados.getText());           
            }
            else if (Opcion2.equals("A medio paso"))
            {
            enviarDatos("3," + txtGrados.getText());           
            }  
    }    
    }


        

    
    
    
    //-----------------------------------------------------------------------------------------------------------------
    @SuppressWarnings("unchecked")
    //-----------------------------------------------------------------------------------------------------------------
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PANEL_FRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PANEL_FRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PANEL_FRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PANEL_FRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PANEL_FRAME().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnGirar;
    private javax.swing.JButton BtnSalir;
    private javax.swing.JComboBox<String> ComboMovimiento;
    private javax.swing.JComboBox<String> ComboPasos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtGrados;
    // End of variables declaration//GEN-END:variables
}
